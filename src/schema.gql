# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AchievementInfo {
  ID: String!
  IMDbRating: Float!
  OMDbRating: Float!
  award: [String!]!
  createdAt: Float!
  deletedAt: Float!
  movie: Movie!
  series: Series!
  updatedAt: Float!
}

type AuthTokenOutput {
  token: String!
}

input ChangeEpisodeSeasonInput {
  EpisodeId: String!
  SeasonId: String!
}

input ChangeThumbnailImageInput {
  Base64: String!
  Mime: String!
}

type Cineast {
  DOB: Float!
  ID: String!
  award: [String!]!
  bio: String!
  country: String!
  createdAt: Float!
  deletedAt: Float!
  externalLink: ExternalLink!
  fullName: String!
  gender: String!
  movieCineast: MovieCineast!
  profession: String!
  seriesCineast: SeriesCineast!
  trailerCineast: TrailerCineast!
  updatedAt: Float!
}

input CreateCineastInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateEpisodeInput {
  MediaBasicInfo: CreateMediaBasicInfoInput!
  MediaImageId: String!
  Number: Float!
  SeasonId: String!
  SignedUrlKeyId: String!
  VideoId: String!
}

input CreateErrorLogInput {
  Message: String!
  StatusCode: Float!
  Type: String!
}

input CreateFinancialInfoInput {
  Budget: Float!
  NetProfit: Float!
  Revenue: Float!
}

input CreateManagerActivityInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateMediaAdditionalInfoInput {
  Genre: String
  OriginCountry: String
  OriginalLanguage: String
  Status: String
}

input CreateMediaBasicInfoInput {
  PlotSummary: String!
  ReleaseDate: Float!
  Title: String!
}

input CreateMediaImageInput {
  Base64: String!
  Mime: String!
  Variant: String!
}

input CreateMovieCineastInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateMovieInput {
  MediaAdditionalInfo: CreateMediaAdditionalInfoInput!
  MediaBasicInfo: CreateMediaBasicInfoInput!
  MediaFinanacialInfo: CreateFinancialInfoInput!
  MediaImageId: String!
  SignedUrlKeyId: String!
  VideoId: String!
}

input CreateProfileInfoInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateReviewInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateSeasonInput {
  MediaBasicInfo: CreateMediaBasicInfoInput!
  MediaImageId: String!
  Number: Float!
  SeriesId: String!
}

input CreateSeriesInput {
  MediaAdditionalInfo: CreateMediaAdditionalInfoInput!
  MediaBasicInfo: CreateMediaBasicInfoInput!
  MediaImageId: String!
}

input CreateTrailerCineastInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateTrailerInput {
  MediaBasicInfo: CreateMediaBasicInfoInput!
  MediaId: String!
  MediaImageId: String!
  MediaType: String!
  SignedUrlKeyId: String!
  VideoId: String!
}

input CreateUserActivityInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input DeleteMultipleSeriesByIdzParams {
  SeriesIdz: [String!]!
}

input DeleteSeriesByIdParams {
  SeriesId: String!
}

type Episode {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  externalLink: [ExternalLink!]!
  mediaBasicInfo: MediaBasicInfo!
  mediaImage: MediaImage!
  mediaResource: MediaResource!
  number: Float!
  review: [Review!]!
  season: Season!
  updatedAt: Float!
  video: Video!
}

type ErrorLog {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  message: String!
  statusCode: Float!
  type: String!
  updatedAt: Float!
}

type ExternalLink {
  ID: String!
  cineast: Cineast!
  createdAt: Float!
  deletedAt: Float!
  episode: Episode!
  movie: Movie!
  resourceName: String!
  series: Series!
  trailer: Trailer!
  type: String!
  updatedAt: Float!
  url: String!
}

type FinancialInfo {
  ID: String!
  budget: Float!
  createdAt: Float!
  deletedAt: Float!
  movie: Movie!
  netProfit: Float!
  revenue: Float!
  series: Series!
  updatedAt: Float!
}

input GetManagerSeriesForTableInput {
  Page: Float!
  PageSize: Float!
}

type GetManagerSeriesForTableOutput {
  seriesList: [GetManagerTableOutputSeriesList!]!
  totalRecords: Float!
}

type GetManagerTableOutputSeriesList {
  ID: String!
  createdAt: Float!
  genre: String!
  mediaImageUrl: String!
  originCountry: String!
  originalLanguage: String!
  plotSummary: String!
  releaseDate: Float!
  status: String!
  title: String!
  updatedAt: Float
}

input GetMediaAdditionalInfoByMediaIdParams {
  MediaId: String!
}

input GetMediaBasicInfoByMediaIdParams {
  MediaId: String!
}

input GetMediaImageByMediaIdParams {
  MediaId: String!
}

type GetNextEpisodeNumberOutput {
  number: Float!
}

input GetNextEpisodeNumberParams {
  SeasonId: String!
}

type GetNextSeasonNumberOutput {
  number: Float!
}

input GetNextSeasonNumberParams {
  SeriesId: String!
}

input GetSeasonBySeriesIdParams {
  SeriesId: String!
}

input GetSeriesCineastBySeriesIdParams {
  SeriesId: String!
}

input GetUploadVideoSignedUrlInput {
  Height: Float!
  MediaType: String!
  Mime: String!
  RunTime: Float!
  SizeInKb: Float!
  Width: Float!
}

type Manager {
  ID: String!
  accountStatus: String!
  createdAt: Float!
  deletedAt: Float!
  email: String!
  lastSignIn: Float!
  managerActivity: ManagerActivity!
  movie: Movie!
  password: String!
  profileInfo: ProfileInfo!
  series: Series!
  trailer: [Trailer!]!
  updatedAt: Float!
}

type ManagerActivity {
  ID: String!
  action: String!
  contentId: String!
  createdAt: Float!
  deletedAt: Float!
  manager: Manager!
  status: String!
  updatedAt: Float!
}

input ManagerRegisterInput {
  Email: String!
  Password: String!
}

input ManagerSignInInput {
  Email: String!
  Password: String!
}

type MediaAdditionalInfo {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  genre: String!
  movie: Movie!
  originCountry: String!
  originalLanguage: String!
  series: Series!
  status: String!
  updatedAt: Float!
}

type MediaBasicInfo {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  episode: Episode!
  movie: Movie!
  plotSummary: String!
  releaseDate: Float!
  season: Season!
  series: Series!
  title: String!
  trailer: Trailer!
  updatedAt: Float!
}

type MediaImage {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  episode: Episode!
  movie: Movie!
  season: Season!
  series: Series!
  trailer: Trailer!
  updatedAt: Float!
  url: String!
  variant: String!
}

type MediaImageIdOutput {
  ID: String!
}

type MediaResource {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  episode: Episode!
  movie: Movie!
  s3ObjectKey: String!
  s3ObjectUrl: String!
  trailer: Trailer!
  updatedAt: Float!
}

type Movie {
  ID: String!
  achievementInfo: AchievementInfo!
  createdAt: Float!
  deletedAt: Float!
  externalLink: ExternalLink!
  financialInfo: FinancialInfo!
  isFree: Boolean!
  manager: Manager!
  mediaAdditionalInfo: MediaAdditionalInfo!
  mediaBasicInfo: MediaBasicInfo!
  mediaImage: MediaImage!
  mediaResource: MediaResource!
  movieCineast: MovieCineast!
  priceInDollar: Float!
  review: Review!
  trailer: Trailer!
  updatedAt: Float!
  video: Video!
}

type MovieCineast {
  ID: String!
  cineast: Cineast!
  createdAt: Float!
  deletedAt: Float!
  movie: Movie!
  updatedAt: Float!
}

type Mutation {
  changeEpisodeSeason(ChangeEpisodeSeasonInput: ChangeEpisodeSeasonInput!): SuccessOutput!
  changeThumbnailImage(ChangeThumbnailImageInput: ChangeThumbnailImageInput!): SuccessOutput!
  createCineast(createCineastInput: CreateCineastInput!): Cineast!
  createEpisode(CreateEpisodeInput: CreateEpisodeInput!): SuccessOutput!
  createErrorLog(CreateErrorLogInput: CreateErrorLogInput!): ErrorLog!
  createManagerActivity(createManagerActivityInput: CreateManagerActivityInput!): ManagerActivity!
  createMediaImage(CreateMediaImageInput: CreateMediaImageInput!): MediaImageIdOutput!
  createMovie(CreateMovieInput: CreateMovieInput!): SuccessOutput!
  createMovieCineast(createMovieCineastInput: CreateMovieCineastInput!): MovieCineast!
  createProfileInfo(createProfileInfoInput: CreateProfileInfoInput!): ProfileInfo!
  createReview(createReviewInput: CreateReviewInput!): Review!
  createSeason(CreateSeasonInput: CreateSeasonInput!): SuccessOutput!
  createSeries(CreateSeriesInput: CreateSeriesInput!): SuccessOutput!
  createTrailer(CreateTrailerInput: CreateTrailerInput!): SuccessOutput!
  createTrailerCineast(createTrailerCineastInput: CreateTrailerCineastInput!): TrailerCineast!
  createUserActivity(createUserActivityInput: CreateUserActivityInput!): UserActivity!
  deleteMultipleSeriesByIdz(DeleteMultipleSeriesByIdzParams: DeleteMultipleSeriesByIdzParams!): SuccessOutput!
  deleteSeriesById(DeleteSeriesByIdParams: DeleteSeriesByIdParams!): SuccessOutput!
  getUploadVideoSignedUrl(GetUploadVideoSignedUrlInput: GetUploadVideoSignedUrlInput!): UploadVideoSignedUrlOutput!
  managerRegister(ManagerRegisterInput: ManagerRegisterInput!): AuthTokenOutput!
  managerSignIn(ManagerSignInInput: ManagerSignInInput!): AuthTokenOutput!
  removeCineast(id: Int!): Cineast!
  removeManagerActivity(id: Int!): ManagerActivity!
  removeMovieCineast(id: Int!): MovieCineast!
  removeProfileInfo(id: Int!): ProfileInfo!
  removeReview(id: Int!): Review!
  removeTrailerCineast(id: Int!): TrailerCineast!
  removeUserActivity(id: Int!): UserActivity!
  updateCineast(updateCineastInput: UpdateCineastInput!): Cineast!
  updateManagerActivity(updateManagerActivityInput: UpdateManagerActivityInput!): ManagerActivity!
  updateMediaBasicInfo(UpdateMediaBasicInfoInput: UpdateMediaBasicInfoInput!, UpdateMediaBasicInfoParams: UpdateMediaBasicInfoParams!): SuccessOutput!
  updateMovieCineast(updateMovieCineastInput: UpdateMovieCineastInput!): MovieCineast!
  updateProfileInfo(updateProfileInfoInput: UpdateProfileInfoInput!): ProfileInfo!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  updateSeries(UpdateSeriesInput: UpdateSeriesInput!, UpdateSeriesParams: UpdateSeriesParams!): SuccessOutput!
  updateTrailerCineast(updateTrailerCineastInput: UpdateTrailerCineastInput!): TrailerCineast!
  updateUserActivity(updateUserActivityInput: UpdateUserActivityInput!): UserActivity!
  userRegister(UserRegisterInput: UserRegisterInput!): AuthTokenOutput!
  userSignIn(UserSignInInput: UserSignInInput!): AuthTokenOutput!
}

type ProfileInfo {
  DOB: Float!
  ID: String!
  address: String!
  contactNumber: String!
  createdAt: Float!
  deletedAt: Float!
  firstName: String!
  gender: String!
  lastName: String!
  manager: Manager!
  updatedAt: Float!
  user: User!
}

type Query {
  cineast(id: Int!): Cineast!
  getManagerSeriesForTable(GetManagerSeriesForTableInput: GetManagerSeriesForTableInput!): GetManagerSeriesForTableOutput!
  getManagerSeriesWithImageAndBasicInfo: [Series!]!
  getMediaAdditionalInfoByMediaId(GetMediaAdditionalInfoByMediaIdParams: GetMediaAdditionalInfoByMediaIdParams!): MediaAdditionalInfo!
  getMediaBasicInfoByMediaId(GetMediaBasicInfoByMediaIdParams: GetMediaBasicInfoByMediaIdParams!): MediaBasicInfo!
  getMediaImageByMediaId(GetMediaImageByMediaIdParams: GetMediaImageByMediaIdParams!): MediaImage!
  getNextEpisodeNumber(GetNextEpisodeNumberParams: GetNextEpisodeNumberParams!): GetNextEpisodeNumberOutput!
  getNextSeasonNumber(GetNextSeasonNumberParams: GetNextSeasonNumberParams!): GetNextSeasonNumberOutput!
  getSeasonBySeriesId(GetSeasonBySeriesIdParams: GetSeasonBySeriesIdParams!): [Season!]!
  getSeriesCineastBySeriesId(GetSeriesCineastBySeriesIdParams: GetSeriesCineastBySeriesIdParams!): Cineast!
  managerActivity(id: Int!): ManagerActivity!
  movieCineast(id: Int!): MovieCineast!
  profileInfo(id: Int!): ProfileInfo!
  review(id: Int!): Review!
  trailerCineast(id: Int!): TrailerCineast!
  userActivity(id: Int!): UserActivity!
}

type Review {
  ID: String!
  comment: String!
  createdAt: Float!
  deletedAt: Float!
  episode: Episode!
  movie: Movie!
  rating: Float!
  series: Series!
  trailer: Trailer!
  updatedAt: Float!
  user: User!
}

type Season {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  episode: [Episode!]!
  mediaBasicInfo: MediaBasicInfo!
  mediaImage: MediaImage!
  number: Float!
  series: Series!
  trailer: Trailer!
  updatedAt: Float!
}

type Series {
  ID: String!
  achievementInfo: AchievementInfo!
  createdAt: Float!
  deletedAt: Float!
  externalLink: ExternalLink!
  financialInfo: FinancialInfo!
  isFree: Float!
  manager: Manager!
  mediaAdditionalInfo: MediaAdditionalInfo!
  mediaBasicInfo: MediaBasicInfo!
  mediaImage: MediaImage!
  priceInDollar: Float!
  review: Review!
  season: Season!
  seriesCineast: SeriesCineast!
  trailer: Trailer!
  updatedAt: Float!
}

type SeriesCineast {
  ID: String!
  cineast: Cineast!
  createdAt: Float!
  deletedAt: Float!
  series: Series!
  updatedAt: Float!
}

type SuccessOutput {
  isSuccess: Boolean!
}

type Trailer {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  externalLink: [ExternalLink!]!
  manager: Manager!
  mediaBasicInfo: MediaBasicInfo!
  mediaImage: MediaImage!
  mediaResource: MediaResource!
  movie: Movie!
  review: [Review!]!
  season: Season!
  series: Series!
  trailerCineast: TrailerCineast!
  updatedAt: Float!
  video: Video!
}

type TrailerCineast {
  ID: String!
  cineast: Cineast!
  createdAt: Float!
  deletedAt: Float!
  trailer: Trailer!
  updatedAt: Float!
}

input UpdateCineastInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Float!
}

input UpdateManagerActivityInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Float!
}

input UpdateMediaAdditionalInfoInput {
  Genre: String
  OriginCountry: String
  OriginalLanguage: String
  Status: String
}

input UpdateMediaBasicInfoInput {
  PlotSummary: String
  ReleaseDate: Float
  Title: String
}

input UpdateMediaBasicInfoParams {
  ID: String!
}

input UpdateMediaImageInput {
  Url: String
  Variant: String
}

input UpdateMovieCineastInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateProfileInfoInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Float!
}

input UpdateReviewInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Float!
}

input UpdateSeriesInput {
  MediaAdditionalInfo: UpdateMediaAdditionalInfoInput!
  MediaBasicInfo: UpdateMediaBasicInfoInput!
  MediaImage: UpdateMediaImageInput!
}

input UpdateSeriesParams {
  SeriesId: String!
}

input UpdateTrailerCineastInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateUserActivityInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Float!
}

type UploadVideoSignedUrlOutput {
  signedUrl: String!
  signedUrlKeyId: String!
  videoId: String!
}

type User {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  email: String!
  password: String!
  profileInfo: ProfileInfo!
  review: Review!
  updatedAt: Float!
  userActivity: UserActivity!
}

type UserActivity {
  ID: String!
  action: String!
  contentId: String!
  createdAt: Float!
  deletedAt: Float!
  status: String!
  updatedAt: Float!
  user: User!
}

input UserRegisterInput {
  Email: String!
  Password: String!
}

input UserSignInInput {
  Email: String!
  Password: String!
}

type Video {
  ID: String!
  createdAt: Float!
  deletedAt: Float!
  episode: Episode!
  height: Float!
  isUsed: Boolean!
  managerId: String!
  mime: String!
  movie: Movie!
  quality: String!
  runTime: Float!
  sizeInKb: Float!
  trailer: Trailer!
  updatedAt: Float!
  width: Float!
}